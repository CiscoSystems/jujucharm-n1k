#!/bin/bash
# config-changed occurs 
# 1- after install hook when deploying the charm
# 2- everytime a new configuration value is updated (juju set)

ovsbridge=$(config-get ovsbridge)
physicalinterfaceforovs=$(config-get physicalinterfaceforovs)
nodeip=$(config-get nodeip)
nodenetmask=$(config-get nodenetmask)
nodegateway=$(config-get nodegateway)
nodedns=$(config-get nodedns)
vsmname=$(config-get vsmname)
consolepts=$(config-get consolepts)
isoimage=$(config-get isoimage)
vsmrole=$(config-get vsmrole)
domainid=$(config-get domainid)
adminpasswd=$(config-get adminpasswd)
mgmtip=$(config-get mgmtip)
mgmtnetmask=$(config-get mgmtnetmask)
mgmtgateway=$(config-get mgmtgateway)
ctrlinterface=$(config-get ctrlinterface)
ctrlmac=$(config-get ctrlmac)
mgmtinterface=$(config-get mgmtinterface)
mgmtmac=$(config-get mgmtmac)
pktinterface=$(config-get pktinterface)
pktmac=$(config-get pktmac)
memory=$(config-get memory)
vcpu=$(config-get vcpu)
disksize=$(config-get disksize)

finaliso=/var/spool/vsm/${vsmrole}_repacked.iso
diskfile=/var/spool/vsm/${vsmrole}_disk
isofile=/opt/cisco/iso/${isoimage}

export physicalinterfaceforovs ovsbridge
export nodeip nodenetmask nodegateway nodedns
export isoimage finaliso diskfile disksize consolepts
export domainid vsmname mgmtip mgmtnetmask mgmtgateway adminpasswd vsmrole
export ctrlinterface ctrlmac mgmtinterface mgmtmac pktinterface pktmac memory vcpu

#start the openvswitch
function start_openvswitch {
    juju-log "Start the openvswitch process"
    /usr/sbin/service openvswitch-switch start

    reload_kmod=`/usr/sbin/service openvswitch-switch status | /bin/grep -c 'ovs-brcompatd is not running'`
    if [ $reload_kmod -eq 1 ]; then
      juju-log "Force reload the new openvswitch kernel module"
      /etc/init.d/openvswitch-switch force-reload-kmod
    fi

    juju-log "Add the ovs bridge"
    /usr/bin/ovs-vsctl -- --may-exist add-br $ovsbridge
    /usr/bin/ovs-vsctl -- --may-exist add-port $ovsbridge $physicalinterfaceforovs
    /sbin/brctl delif br0 $physicalinterfaceforovs
    ifconfig br0 0.0.0.0 0.0.0.0
    /usr/sbin/service openvswitch-switch restart

}

#Move the phsical interface to ovs bridge
function update_ovs_interfaces {
    juju-log "Move the physical interface to ovs bridge and restart network"

    juju-log "using eth-config.tmpl to create eth-config"
    cheetah fill --env --oext compiled templates/eth-config.tmpl
    juju-log "copy the compiled template to /etc/network/"
    cp templates/eth-config.compiled /etc/network/${physicalinterfaceforovs}.config

    juju-log "restart the networking service"
    /etc/init.d/networking restart
}

#Repack the nexus 1k iso
function repack_iso {
    juju-log "Repack the VSM ISO with the setup script enviornment variables"
    ./hooks/lib/repackiso.py -i $isoimage -d $domainid -n $vsmname -m $mgmtip -s $mgmtnetmask -g $mgmtgateway -p $adminpasswd -r $vsmrole -f $finaliso
}

#Generate the vsm vm xml file
function generate_vsm_vm_xml {
    juju-log "Complie the vsm_vsm.xml from the template"
    cheetah fill --env --oext compiled templates/vsm_vm.xml.tmpl
    cp templates/vsm_vm.xml.compiled /var/spool/vsm/vsm_vm.xml
    juju-log "vsm_vm.xml creation done" 
}

function download_vsm_iso_from_ppa {
tee /etc/apt/sources.list.d/springfield-ppa.list <<EOF
deb https://shivrao:ZSCc3jxB4RMLrLqZlp9T@private-ppa.launchpad.net/springfield-team/n1k-staging/ubuntu precise main #Personal access of Shiv Prasad Rao (shivrao) to Cisco Nexus 1000v Staging PPA
deb-src https://shivrao:ZSCc3jxB4RMLrLqZlp9T@private-ppa.launchpad.net/springfield-team/n1k-staging/ubuntu precise main #Personal access of Shiv Prasad Rao (shivrao) to Cisco Nexus 1000v Staging PPA
EOF

    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys F5DB2BA06DB3EEB4
    apt-get update
    apt-get install nexus-1000v-iso
    cp /opt/cisco/iso/$isoimage /var/spool/vsm/.
}

function qemu_img_create {
    juju-log "Check and create the qemu-img"
    vsm_running=`/usr/bin/virsh list | grep -c ' $vsmname .* running'`

    if [ $vsm_running -eq 0 ]; then
      /usr/bin/qemu-img create -f raw $diskfile ${disksize}G
      juju-log "qemu-img create done"
    fi
}

vsm_running=`/usr/bin/virsh list | grep -c ' $vsmname .* running'`
if [ $vsm_running -eq 0 ]; then
    download_vsm_iso_from_ppa
    start_openvswitch
    update_ovs_interfaces
    repack_iso
    generate_vsm_vm_xml
    qemu_img_create
fi

hooks/dvs-relation-joined
